{
  "success" : true,
  "data" :{
    "rows": [
      {
        "id":1,
        "name":"name1",
        "names":" Name: eno16777736 MAC: 00:0c:29:0c:68:39 速度: 1.0 Gbps",
        "status":"dicovery",
        "nesstatus":"上电",
        "log":"ks脚本错误",
        "measurement":"192.168.234.1",
        "measurement2":"192.168.24.1",
        "mac":"50-7b-9d-00-98-46",
        "remark":"型号VMware Virtual S 容量50.0 GB REMOVABLE0 磁盘disk/by-path/pci-0000:00:10.0-scsi-0:0:0:0",
        "measureNameId":2,
        "measurementValue":"eth0",
        "configId":"centos",
        "yesorno":"否",
        "addres":"sda",
        "sn":"Q5G020141254598745",
        "configFile":"#!/bin/bash\n\nanynowtime=\"date +'%Y-%m-%d %H:%M:%S'\"\nNOW=\"echo [\\`$anynowtime\\`][PID:$$]\"\n\n#####可在脚本开始运行时调用，打印当时的时间戳及PID。\nfunction job_start\n{\n    echo \"`eval $NOW` job_start\"\n}\n\n#####可在脚本执行成功的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_success\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_success:[$MSG]\"\n    exit 0\n}\n\n#####可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_fail\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_fail:[$MSG]\"\n    exit 1\n}\n\njob_start\n\n######可在此处开始编写您的脚本逻辑代码\n######作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值\n######如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败\necho \"示例：对外开端口.....\"\necho \"iptables...\""
      },
      {
        "id":2,
        "name":"name2",
        "names":" Name: eno16777736 MAC: 00:0c:29:0c:68:39 速度: 1.0 Gbps",
        "status":"dicovery",
        "nesstatus":"上电",
        "log":"ks脚本错误",
        "mac":"20-7b-9d-00-98-46",
        "measurement":"192.168.234.1",
        "measurement2":"192.168.24.1",
        "remark":"型号VMware Virtual S 容量50.0 GB REMOVABLE0 磁盘disk/by-path/pci-0000:00:10.0-scsi-0:0:0:0",
        "measureNameId":2,
        "measurementValue":"eth1",
        "configId":"centos",
        "yesorno":"否",
        "addres":"sdb",
        "sn":"Q5G020141254598745",
        "configFile":"#!/bin/bash\n\nanynowtime=\"date +'%Y-%m-%d %H:%M:%S'\"\nNOW=\"echo [\\`$anynowtime\\`][PID:$$]\"\n\n#####可在脚本开始运行时调用，打印当时的时间戳及PID。\nfunction job_start\n{\n    echo \"`eval $NOW` job_start\"\n}\n\n#####可在脚本执行成功的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_success\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_success:[$MSG]\"\n    exit 0\n}\n\n#####可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_fail\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_fail:[$MSG]\"\n    exit 1\n}\n\njob_start\n\n######可在此处开始编写您的脚本逻辑代码\n######作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值\n######如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败\necho \"示例：对外开端口.....\"\necho \"iptables...\""
      },
      {
        "id":3,
        "name":"name3",
        "names":" Name: eno16777736 MAC: 00:0c:29:0c:68:39 速度: 1.0 Gbps",
        "status":"ABdicovery",
        "nesstatus":"上电",
        "log":"ks脚本错误",
        "measurement":"192.168.234.1",
        "measurement2":"192.168.24.1",
        "mac":"50-7b-9d-00-98-46",
        "remark":"型号VMware Virtual S 容量50.0 GB REMOVABLE0 磁盘disk/by-path/pci-0000:00:10.0-scsi-0:0:0:0",
        "measureNameId":2,
        "measurementValue":"eth2",
        "configId":"centos",
        "yesorno":"是",
        "addres":"sdc",
        "sn":"Q5G020141254598745",
        "configFile":"#!/bin/bash\n\nanynowtime=\"date +'%Y-%m-%d %H:%M:%S'\"\nNOW=\"echo [\\`$anynowtime\\`][PID:$$]\"\n\n#####可在脚本开始运行时调用，打印当时的时间戳及PID。\nfunction job_start\n{\n    echo \"`eval $NOW` job_start\"\n}\n\n#####可在脚本执行成功的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_success\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_success:[$MSG]\"\n    exit 0\n}\n\n#####可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_fail\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_fail:[$MSG]\"\n    exit 1\n}\n\njob_start\n\n######可在此处开始编写您的脚本逻辑代码\n######作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值\n######如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败\necho \"示例：对外开端口.....\"\necho \"iptables...\""
      },
      {
        "id":5,
        "name":"name4",
        "names":" Name: eno16777736 MAC: 00:0c:29:0c:68:39 速度: 1.0 Gbps",
        "status":"ABdicovery",
        "nesstatus":"上电",
        "log":"ks脚本错误",
        "measurement":"192.168.234.1",
        "measurement2":"192.168.24.1",
        "mac":"50-7b-9d-00-98-46",
        "remark":"型号VMware Virtual S 容量50.0 GB REMOVABLE0 磁盘disk/by-path/pci-0000:00:10.0-scsi-0:0:0:0",
        "measureNameId":2,
        "measurementValue":"eth3",
        "configId":"centos",
        "yesorno":"是",
        "addres":"sde",
        "sn":"Q5G020141254598745",
        "configFile":"#!/bin/bash\n\nanynowtime=\"date +'%Y-%m-%d %H:%M:%S'\"\nNOW=\"echo [\\`$anynowtime\\`][PID:$$]\"\n\n#####可在脚本开始运行时调用，打印当时的时间戳及PID。\nfunction job_start\n{\n    echo \"`eval $NOW` job_start\"\n}\n\n#####可在脚本执行成功的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_success\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_success:[$MSG]\"\n    exit 0\n}\n\n#####可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_fail\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_fail:[$MSG]\"\n    exit 1\n}\n\njob_start\n\n######可在此处开始编写您的脚本逻辑代码\n######作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值\n######如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败\necho \"示例：对外开端口.....\"\necho \"iptables...\""
      }],
    "total":20
  },
  "message" : "信息",
  "code" : 1111,
  "solution" : " "
}