{
  "success": true,
  "data": {
    "rows": [
      {
        "id": 1,
        "value":"监控项1",
        "name": "监控项1",
        "status": "NORMAL",
        "moreProp": "haha1",
        "remark": "运行中运行中运行中",
        "measureNameId": 2,
        "measurementValue": "name1",
        "configId": 2,
        "configFile": "#!/bin/bash\n\nanynowtime=\"date +'%Y-%m-%d %H:%M:%S'\"\nNOW=\"echo [\\`$anynowtime\\`][PID:$$]\"\n\n#####可在脚本开始运行时调用，打印当时的时间戳及PID。\nfunction job_start\n{\n    echo \"`eval $NOW` job_start\"\n}\n\n#####可在脚本执行成功的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_success\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_success:[$MSG]\"\n    exit 0\n}\n\n#####可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_fail\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_fail:[$MSG]\"\n    exit 1\n}\n\njob_start\n\n######可在此处开始编写您的脚本逻辑代码\n######作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值\n######如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败\necho \"示例：对外开端口.....\"\necho \"iptables...\""
      },
      {
        "id": 2,
        "name": "监控项2",
        "value":"监控项2",
        "status": "NORMAL",
        "moreProp": "haha1",
        "remark": "运行中运行中运行中",
        "measureNameId": 2,
        "measurementValue": "name2",
        "configId": 2,
        "configFile": "#!/bin/bash\n\nanynowtime=\"date +'%Y-%m-%d %H:%M:%S'\"\nNOW=\"echo [\\`$anynowtime\\`][PID:$$]\"\n\n#####可在脚本开始运行时调用，打印当时的时间戳及PID。\nfunction job_start\n{\n    echo \"`eval $NOW` job_start\"\n}\n\n#####可在脚本执行成功的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_success\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_success:[$MSG]\"\n    exit 0\n}\n\n#####可在脚本执行失败的逻辑分支处调用，打印当时的时间戳及PID。\nfunction job_fail\n{\n    MSG=\"$*\"\n    echo \"`eval $NOW` job_fail:[$MSG]\"\n    exit 1\n}\n\njob_start\n\n######可在此处开始编写您的脚本逻辑代码\n######作业平台中执行脚本成功和失败的标准只取决于脚本最后一条执行语句的返回值\n######如果返回值为0，则认为此脚本执行成功，如果非0，则认为脚本执行失败\necho \"示例：对外开端口.....\"\necho \"iptables...\""
      }
    ],
    "total": 20
  },
  "message": "信息",
  "code": 1111,
  "solution": " "
}